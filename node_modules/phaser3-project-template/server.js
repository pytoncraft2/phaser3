const app = require('express')();
const http = require('http').Server(app);
const io = require('socket.io')(http);

app.get('/', (req, res) => {
  res.sendFile(__dirname + '/index.html');
});

http.listen(3000, () => {
  console.log('listening on *:3000');
});

var playerlocation = 0;
var playerlist = [];



io.on('connection', function (socket) {
    console.log('Nouvelle utilisateur: ' + socket.id);
    socket.broadcast.emit('message', 'Nouvelle utilisateur !')


  socket.on('recievedata', function(positionx, positiony, currentanimation, gamename, scale) {

    socket.broadcast.emit('playermove', positionx, positiony, currentanimation, gamename, scale);


  });

  socket.on('initializeplayer', function(newplayername) {

    socket.clientname = newplayername;
    playerlist.push(newplayername);
    io.sockets.emit('addplayer', playerlist, newplayername);

  });

  socket.on('disconnect', function() {
    delete playerlist[socket.clientname];
    for (var i in playerlist) {
      if (playerlist[i] == socket.clientname) {
        playerlist.splice(i, 1);
      }
    }

    socket.broadcast.emit('message', socket.clientname);
    socket.broadcast.emit('netreplayer', playerlist);


  });


socket.on('message', function (text) {
  // console.log("test reussi");
  console.log('message: ' + text);
  socket.broadcast.emit('Courrier', text);
})





    socket.on('disconnect', function () {
        console.log('A user disconnected: ' + socket.id);
        playerlist = playerlist.filter(player => player !== socket.id);
    });
});
