class Personnage extends Phaser.Scene {
  //identifiant
  constructor() {
    super({
      key: "Personnage"
    });
    // this.socket = io();
  }
  //charge image
  preload() {
    this.load.image('perso', 'http://localhost/phaser3/node_modules/phaser3-project-template/client/src/assets/profil.png');
    this.load.image('bg', 'http://localhost/phaser3/node_modules/phaser3-project-template/client/src/assets/bg.png');
  }

  create() {

    // this.socket = io();
    this.socket = io('http://localhost:3000');

    this.socket.on('connect', function () {
      console.log('Connected!');
    });
        // this.socket = io('http://localhost:3000', {
      // transports: ['websocket', 'polling', 'flashsocket']
    // });
    // this.image = this.add.image(0,200,'perso');
    this.bg = this.add.image(750, 350, 'bg');
    this.image = this.add.image(750, 350, 'perso');
    this.image.scale = 0.2;

    this.input.keyboard.on('keyup_A', function(e) {
      console.log("yes");
      this.image.scale = 1;
    }, this);

    this.key_up = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.UP);
    this.key_down = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.DOWN);
    this.key_right = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.RIGHT);
    this.key_left = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.LEFT);
    // this.key_A = this.input.keyboard.addKey(Phaser.Input.Keyboard.Keycodes.A);
    // var keyObj = Personnage.input.keyboard.addKey('W');
    this.input.keyboard.on('keyup', function(e) {
      if (e.key == 2) {
        this.scene.start('Chambre');
      }
    }, this);
  }

  update(delta) {

    console.log(this.image.x);
    //bigger
    if (this.key_up.isDown && this.image.scale >= 0.2) {
      this.image.scale = this.image.scale - 0.005;
      // this.image.y += 2;
    }

    //smaller
    if (this.key_down.isDown && this.image.scale <= 2)
      this.image.scale = this.image.scale + 0.005;

    if (this.key_right.isDown)
      this.image.x += 2;

    if (this.key_left.isDown)
      this.image.x -= 2;

      this.socket.emit('etat', this.image.scale);

  }
}
